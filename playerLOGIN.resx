<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnback.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAyADIDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        zZZ0hVmkkjSNVZnZz8oXqc9sHG4j+PG4YC4r87P27f8AgvFD8PfjFdfBn9nvwXqHxv8AjEoK3dvp7D+y
        /D+cKz3tzgom0sA4OAOQ7QkAMf8ABeX9u/xl8MdK8Ffs/wDwZuGi+M3xuvTplldrIYjoVljdc3pdeUKK
        VYN0GJJFI8kK2T+xf+xd4K/YR+CsPhPwnGss7L9p13X7pFS91+5GWe5uZOu0EtsQkrGvGSdzN/Oni94w
        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
</value>
  </data>
</root>